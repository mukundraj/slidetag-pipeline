import os
# configfile: "../../configs/config.yaml"
# configfile: "../../configs/config_test.yaml"
configfile: "./build/config.yaml"


rule test:
	params: 
		p=1
	output:
		"b"
	shell:
		"echo {params.p} {output} "+config['datapath']+" > b"

rule injest_imgs:
	input: 
		nissls=config['homedir']+config['datapath']+'/nissls'+'.zip',
		stags=config['homedir']+config['datapath']+'/stags'+'.zip'
	output:
		nissls_op=directory(config['homedir']+config['oproot']+'/'+config['dataname']+'/nissls'),
		stags_op=directory(config['homedir']+config['oproot']+'/'+config['dataname']+'/stags')
	shell:
		"unzip {input.nissls} -d {output.nissls_op} ; unzip {input.stags} -d {output.stags_op}"

fnames, = glob_wildcards(config['homedir']+config['oproot']+'/'+config['dataname']+'/nissls/{fname,[^/]+}.tif')
print (fnames)
print(config['homedir']+config['oproot']+'/'+config['dataname']+'/nissls')

rule all:
	input: 
		nissls=expand(config['homedir']+config['oproot']+'/'+config['dataname']+'/rigid/{fname}', fname=fnames),

# rule to list dir and create a rigid/folder for each file
rule create_rigid_folders:
	input:
		nissls=config['homedir']+config['oproot']+'/'+config['dataname']+'/nissls/{fname}.tif'
	output:
		nissls=directory(config['homedir']+config['oproot']+'/'+config['dataname']+'/rigid/{fname}'),
	shell: 
		"mkdir -p {output.nissls}"
		

rule get_tifs:
	input:
		nissls=rules.injest_imgs.output.nissls_op,
		stags=rules.injest_imgs.output.stags_op
	output:
		nissls=directory(config['homedir']+config['oproot']+'/'+config['dataname']+'/nissls_onlytifs'),
		stags=directory(config['homedir']+config['oproot']+'/'+config['dataname']+'/stags_onlytifs'),
	shell:
		'mkdir -p {output.nissls} && cp {input.nissls}/*.tif {output.nissls} &&'
		'mkdir -p {output.stags} && cp {input.stags}/*.tif {output.stags}'

# rule to create slicer files via python script

